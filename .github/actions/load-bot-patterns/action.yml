name: 'Load Bot Patterns'
description: 'Loads and provides bot detection patterns from centralized configuration'

outputs:
  bot-patterns-script:
    description: 'JavaScript code that defines bot detection functions'
    value: ${{ steps.load-patterns.outputs.bot-patterns-script }}

runs:
  using: 'composite'
  steps:
    - name: Load bot patterns from configuration
      id: load-patterns
      shell: bash
      run: |
        # Read the bot patterns configuration file
        BOT_CONFIG_FILE="${GITHUB_WORKSPACE}/.github/bot-patterns.json"

        if [[ ! -f "$BOT_CONFIG_FILE" ]]; then
          echo "::error::Bot patterns configuration file not found: $BOT_CONFIG_FILE"
          exit 1
        fi

        # Generate JavaScript code that creates the pattern arrays and helper functions
        cat << 'EOF' > /tmp/bot-patterns.js
        // Load bot patterns from configuration
        const fs = require('fs');
        const path = require('path');

        const configPath = path.join(process.env.GITHUB_WORKSPACE, '.github', 'bot-patterns.json');
        const config = JSON.parse(fs.readFileSync(configPath, 'utf8'));

        // Create excluded bot patterns array
        const excludedBotPatterns = config.excludedBotPatterns.map(p => new RegExp(p.pattern, p.flags));

        // Create all bot patterns array (excluded + regular)
        const allBotPatterns = [
          ...excludedBotPatterns,
          ...config.botPatterns.map(p => new RegExp(p.pattern, p.flags))
        ];

        // Helper functions for bot detection
        function isBot(username) {
          return allBotPatterns.some(pattern => pattern.test(username));
        }

        function isExcludedBot(username) {
          return excludedBotPatterns.some(pattern => pattern.test(username));
        }

        function isDependabot(username) {
          return /^dependabot(\[bot\])?$/i.test(username);
        }

        // Export for use in GitHub Actions scripts
        if (typeof module !== 'undefined' && module.exports) {
          module.exports = {
            excludedBotPatterns,
            allBotPatterns,
            isBot,
            isExcludedBot,
            isDependabot
          };
        }
        EOF

        # Read the generated JavaScript and encode it for GitHub Actions output
        BOT_PATTERNS_SCRIPT=$(cat /tmp/bot-patterns.js)

        # Set the output using the GitHub Actions format for multiline strings
        {
          echo "bot-patterns-script<<BOT_PATTERNS_EOF"
          echo "$BOT_PATTERNS_SCRIPT"
          echo "BOT_PATTERNS_EOF"
        } >> $GITHUB_OUTPUT

        echo "âœ… Bot patterns loaded successfully from configuration"
